@page "/now_playing"


@inject TMDBClient TMDB
@inject NavigationManager navManager

<PageTitle>Movie Pro Wonder - @Title</PageTitle>
<div class="container-xxl py-3">
    <div class="text-center mt-2 mb-3">
        <h1 class="display-6">
            <span class="text-danger">
                <i class="bi bi-fire"></i>
            </span>
            @Title
        </h1>
    </div>
    <div class="d-flex flex-column flex-md-row justify-content-between my-3">
        <div class="row row-cols-2 row-cols-lg-4 row-cols-xl-5 g-3 justify-content-center justify-content-md-start">
            @if (movies is not null)
            {
                @foreach (BlazorMovie.Models.NowPlaying movie in movies.Results)
                {
                    <div class="col">
                        <MovieCard  />
                    </div>
                }

            }
            else
            {
                for (int i = 0; i < 10; i++)
                {
                    <div class="col">
                        <MovieCard  />

                    </div>
                }
            }
                
            
        </div>

    </div>

</div>



@code {
    private NowPlayingPageResponse? movies;

    [Parameter]
    public string Title { get; set; } = "Now Playing";

    [Parameter]
    public NowPlaying? Movie { get; set; }

    [SupplyParameterFromQuery]
    public int Page { get; set; } = 1;

    protected override async Task OnParametersSetAsync()
    {
        if (Page < 1) Page = 1;
        else if (Page > 500) Page = 500;
        movies = await TMDB.GetNowPlayingAsync(Page);
        Title = "Now Playing";
    }
    private void GetPage(int pageNum)
    {
        string url = navManager.GetUriWithQueryParameter("page", pageNum);
        navManager.NavigateTo(url);
    }
}
