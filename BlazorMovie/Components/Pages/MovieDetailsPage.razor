@* MovieDetailsPage *@
@page "/movie/{id:int}"
@using System.Linq;
@using BlazorMovie.Services
@using BlazorMovie.Components.UIComponents
@inject TMDBClient TMDB

@*movie details*@
@if (movieDetails is null)
{
    //build out placeholder code
    <p><em>Loading Movie Details. . .</em></p>
}
else
{
    <PageTitle>@movieDetails?.Title</PageTitle>
    <!--Page Banner-->
    <div class="hero-bg" style="@($"--bg-img:url(https://image.tmdb.org/t/p/original/{movieDetails?.BackdropPath})")">
        <div class="hero-container-xxl d-flex flex-column flex-md-row">

            <!--title content goes here-->
            <div class="flex-grow-1 d-flex align-items-center justify-content-center justify-content-md-end">
                <HeroBadgesComponent MovieDetails="movieDetails" />
            </div>

            <!--poster goes here-->
            <div class="order-last order-md-first d-flex justify-content-center">
                <div class="poster-container">
                    @if (string.IsNullOrEmpty(movieDetails?.PosterPath))
                    {
                        <img src="/img/PosterPlaceHolder.png" alt="Movie Poster" title="Movie Poster" />
                    }
                    else
                    {
                        <img src="@($"https://image.tmdb.org/t/p/w500/{movieDetails.PosterPath}")" alt="@movieDetails.Title" class="img-fluid rounded shadow-lg" />
                    }

                </div>
            </div>
        </div>
    </div>
    <div class="container-xxl">
        <div class="overview d-flex flex-column">
            <p>
                @((movieDetails?.Overview != null) ? movieDetails.Overview
                    : "Overview Summary Not Available")
            </p>

            <div class="row mb-2">
                <!-- Status and Revenue -->
                <div class="col-6 text-start">
                   <strong class="me-2">Status:</strong>
                    @((movieDetails?.Status != null) ? movieDetails.Status
                        : "Status Not Available")
                </div>
                <div class="col-6 text-end">
                 <strong>Revenue:</strong>
                    @((movieDetails?.Revenue != null)
                        ? @movieDetails.Revenue.ToString("C", new System.Globalization.CultureInfo("en-US"))
                        : "Revenue Not Available")   
                </div>
            </div>

            <div class="row mb-2">
                <!-- Language and Budget -->
                <div class="col-6 text-start">
                    <strong>Language:</strong>
                    @(movieDetails?.SpokenLanguages?.Any() == true
                        ? string.Join(", ", movieDetails.SpokenLanguages.Select(sl => sl.EnglishName))
                        : "Not Available")
                </div>

                <div class="col-6 text-end">
                    <strong>Budget:</strong>
                    @((movieDetails?.Budget != null)
                        ? @movieDetails.Budget.ToString("C", new System.Globalization.CultureInfo("en-US"))
                        : "Budget Not Available")
                </div>
            </div>

                <!-- Genres -->
            <div class="row mb-2">
                <div class="col-12 text-center">
                 <strong class="me-2">Genres:</strong>
                    <GenreListComponent Genres="movieDetails?.Genres?.ToList()" MaxGenresPerRow="3" />
                </div>
            </div>

        </div>
    </div>
}

@code {

    [Parameter]
    public int Id { get; set; }

    private MovieDetails? movieDetails;

    protected override async Task OnInitializedAsync()
    {
        movieDetails = await TMDB.GetMovieDetailsAsync(Id);
    }
    
}   
