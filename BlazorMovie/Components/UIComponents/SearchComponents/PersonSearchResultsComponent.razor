@* PersonSearchResultsComponent modal *@
@inherits LayoutComponentBase

@using BlazorMovie.Components.UIComponents.CreditComponents
@using BlazorMovie.Models.Credits
@using BlazorMovie.Models.Interfaces
@using BlazorMovie.Models.Search

@inject NavigationManager _navManager

<div class="@ModalCssClass"
style="@ModalStyle"
id="personSearchResultsModal" 
tabindex="-1"
aria-labelledby="personSearchResultsModalLabel" aria-hidden="@(!IsOpen).ToString()"
role="dialog">
    <div class="modal-dialog modal-xl modal-dialog-centered modal-custom-size modalDesign">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Search Results for "@GetName"</h5>
                <button type="button" class="btn-close" title="close modal" @onclick="CloseModal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="container">
                    <div class="row gy-4">
                        @if (SearchPersonResults?.Results is not null && SearchPersonResults.Results.Any())
                        {
                            @foreach (var person in SearchPersonResults.Results)
                            {
                                <div class="col-lg-4 col-md-6 col-sm-12">
                                    @* <div class="card h-100 shadow p-3 mb-5 bg-body-tertiary rounded"> *@
                                        <PersonCardComponent Person="person" 
                                        SubText="@GetPopularityRating(person)" 
                                        OnMoreDetailsRequested="HandleChildMoreDetailsRequested"/>
                                    @* </div> *@
                                </div>
                            }
                        }
                        else
                        {
                            <p>No matching people found.</p>
                        }
                    </div>
                </div>
            </div>
            <div class="flex-grow-1"></div>
           <button type="button" class="btn cardBtn mb-2 w-50 mx-auto" @onclick="CloseModal">Close</button>
         </div>
    </div>
</div>

@code {
    #region PARAMETERS
    [Parameter]
    public PageResponse<PersonSearchResult>? SearchPersonResults { get; set; }

    [Parameter]
    public bool IsOpen { get; set; }

    [Parameter]
    public EventCallback OnCloseModal { get; set; }

    [Parameter]
    public EventCallback<int> OnMoreDetailsRequested { get; set; }

    #endregion

    #region PROPERTIES/VARIABLES
    private string person { get; set; } = string.Empty;
    private string ModalCssClass => IsOpen ? "modal fade show" : "modal fade";
    private string ModalStyle => IsOpen ? "display: block; padding-right: 17px;" : "display: none";
    private string GetName => SearchPersonResults?.Results.FirstOrDefault()?.Name ?? "Unknown";

    //return the conversion of  float popularity  to string SubText
    private string GetPopularityRating(PersonSearchResult? person)
    => person?.Popularity.ToString("0.0") ?? "N/A";
#endregion

    private async Task HandleChildMoreDetailsRequested(int personId) => await OnMoreDetailsRequested.InvokeAsync(personId);
   
    private IEnumerable<PersonSearchResult> PersonResults => SearchPersonResults?.Results 
                                                         ?? Enumerable.Empty<PersonSearchResult>();
    
    private void ViewPersonDetails(int id) => _navManager.NavigateTo($"/persondetails/{id}");
    private void CloseModal() => OnCloseModal.InvokeAsync();
    
}
