﻿@*PersonCardComponent*@
@using BlazorMovie.Models.Credits
@using BlazorMovie.Models.Interfaces
@using BlazorMovie.Components.UIComponents.MoviePropertyComponents
@using BlazorMovie.Components.UIComponents.CreditComponents
 @inject NavigationManager _navManager

@if (Person != null)
{
    <div class="card h-100 fade-in shadow p-3 mb-5 card-light-bg rounded position-relative ">

        <CardProfileImageComponent ProfilePath="@Person.ProfilePath" />

        <div class="card-body border-top d-flex flex-column">
            <h3 class="card-title">@Person.Name</h3>
            <p class="card-text">Popularity Score: @SubText / 10</p>
            <div class="flex-grow-1"></div>
              <button class="btn cardBtn"
                    @onclick="() =>HandleMoreDetailsClick(Person.Id)">
                More Details
            </button>
        </div>

    </div>
}
else
{
    <div class="card h-100 shadow p-3 mb-5 bg-body-tertiary rounded">

        <CardProfileImageComponent ProfilePath="@null" />

        <div class="card-body border-top flex-column ">
            <h5 class="card-title placeholder-glow">
                <span class="placeholder col-6"></span>
            </h5>
            <p class="card-text placeholder-glow">
                <span class="placeholder col-8"></span>
            </p>
        </div>
    </div>
}

@code {
    [Parameter]
    public IPersonMinimal Person { get; set; } = default!;

    [Parameter]
    public string SubText { get; set; } = string.Empty;

    [Parameter]
    public EventCallback<int> OnMoreDetailsRequested { get; set; }

    private async Task HandleMoreDetailsClick(int personId)
    {
        if (Person != null) await OnMoreDetailsRequested.InvokeAsync(Person.Id);
    }
}