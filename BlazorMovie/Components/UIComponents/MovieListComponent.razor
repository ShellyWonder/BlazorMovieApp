@typeparam TMovie where TMovie : Movie
 @using BlazorMovie.Components.UIComponents.UtilityComponents
 @using BlazorMovie.Models.Credits

<PageTitle>Movie Pro Wonder - @Title</PageTitle>
<div class="container-xxl py-3">
    <div class="text-center mt-2 mb-3">
        <h1 class="display-6">
            <span class="text-danger">
                <i class="bi bi-fire"></i>
            </span>
            @Title
        </h1>
    </div>

    <div class="d-flex flex-column flex-md-row justify-content-between my-3">

            @if (movies?.Results is not null && movies.Results.Any())
            {
                <div class="row row-cols-2 row-cols-lg-4 row-cols-xl-5 g-3 justify-content-center justify-content-md-start">

                    @foreach (var movie in movies.Results)
                    {
                        <div class="col">
                        <MovieCardDetails TMovie="TMovie" Movie="@movie"  />
                        </div>
                    }

                 </div>

            }
            else
            {

                <div class="col-12 text-center">
                    <p>Currently, no movies are available to display.</p>
                </div>

            }

    </div>
    @if (movies?.TotalPages > 1)
    {
        <div class="my-3">
            <PaginatorComponent CurrentPage="movies?.Page ?? 1"
                       TotalPages="movies?.TotalPages > 500 ? 500 : movies?.TotalPages ?? 0"
                       OnPageChange="HandlePageChange" />

        </div>

    }
    <BackToTopComponent />
</div>


@code {
    [Parameter]
    public PageResponse<TMovie>? movies { get; set; }


    [Parameter]
    public string? Title { get; set; } = "Movies";

    [Parameter]
    public EventCallback<int> OnPageChanged { get; set; }

    
    private async Task HandlePageChange(int newPage)
    {
        if (OnPageChanged.HasDelegate)
        {
        await OnPageChanged.InvokeAsync(newPage);
            
        }
    }
}
