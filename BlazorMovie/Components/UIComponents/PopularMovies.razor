@using BlazorMovie.Services
@using BlazorMovie.Models
@using BlazorMovie.Models.Interfaces

@inject TMDBClient TMDB
@inject NavigationManager navManager
@inject PopularMovieService PopularMovieService

<PageTitle>Movie Pro Wonder - @Title</PageTitle>
<div class="container-xxl py-3">
    <div class="text-center mt-2 mb-3">
        <h1 class="display-6">
            <span class="text-danger">
                <i class="bi bi-fire"></i>
            </span>
            @Title
        </h1>
    </div>

    <div class="d-flex flex-column flex-md-row justify-content-between my-3">

        <div class="row row-cols-2 row-cols-lg-4 row-cols-xl-5 g-3 justify-content-center justify-content-md-start">
            @if (movies?.Results is not null)
            {

                @foreach (var movie in movies.Results)
                {
                    <div class="col">
                        <MovieCardDetails TMovie="PopularMovie" Movie="@movie" />
                    </div>
                }

            }
            else
            {
               
                    <div class="text-center">
                        <p>Currently, no movies are available to display.</p>

                    </div>
                
            }

        </div>
    </div>
    @if (movies?.TotalPages > 1)
    {
        <div class="my-3">
            <Paginator CurrentPage="movies.Page"
                       TotalPages="movies.TotalPages > 500 ? 500 : movies.TotalPages"
                       OnPageChange="GetPage" />

        </div>

    }

</div>


@code {
    private PopularMoviesPageResponse? movies;
    

    [Parameter]
    public string? Title { get; set; } = "Popular Movies";


    [SupplyParameterFromQuery]
    public int Page { get; set; } = 1;

    protected override async Task OnParametersSetAsync()
    {

        await LoadMovies();

    }

    private async Task LoadMovies()
    {
        movies = await PopularMovieService.GetMoviesAsync(Page);
    }


    private void GetPage(int pageNum)
    {
        string url = navManager.GetUriWithQueryParameter("page", pageNum);
        navManager.NavigateTo(url);
    }
}